{"version":3,"file":"widget.component.js","sourceRoot":"","sources":["widget.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAkC,eAAe,CAAC,CAAA;AAClD,gCAA+B,oBAAoB,CAAC,CAAA;AACpD,kCAA4B,4BAA4B,CAAC,CAAA;AAEzD,kCAAuB,4BAA4B,CAAC,CAAA;AAQpD;IAIE,yBACU,cAA8B,EAC9B,WAAwB,EACxB,MAAc;QAFd,mBAAc,GAAd,cAAc,CAAgB;QAC9B,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;IACrB,CAAC;IAEJ,kCAAQ,GAAR;QAAA,iBAMC;QALC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;YACxC,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACrC,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,EAAE,CAAC;iBAC9B,IAAI,CAAC,UAAA,MAAM,IAAI,OAAA,KAAI,CAAC,MAAM,GAAG,MAAM,EAApB,CAAoB,CAAC,CAAC;QAC1C,CAAC;IACH,CAAC;IAED,8BAAI,GAAJ;QAAA,iBAOC;QANC,IAAI,CAAC,cAAc;aAChB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;aACjB,IAAI,CAAC,UAAA,MAAM;YACV,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;QACpC,CAAC,CAAC;aACD,KAAK,CAAC,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,KAAK,GAAG,KAAK,EAAlB,CAAkB,CAAC,CAAC,CAAC,8BAA8B;IACvE,CAAC;IA/BH;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,YAAY;YACtB,WAAW,EAAE,uBAAuB;YACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;SACpC,CAAC;;uBAAA;IA4BF,sBAAC;AAAD,CAAC,AA3BD,IA2BC;AA3BY,uBAAe,kBA2B3B,CAAA","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { WidgetsService } from '../widgets.service';\nimport { RouteParams } from '@angular/router-deprecated';\nimport { Widget } from '../models/widget';\nimport { Router } from '@angular/router-deprecated';\n\n@Component({\n  moduleId: module.id,\n  selector: 'app-widget',\n  templateUrl: 'widget.component.html',\n  styleUrls: ['widget.component.css']\n})\nexport class WidgetComponent implements OnInit {\n  widget: Widget;\n  error: any;\n\n  constructor(\n    private widgetsService: WidgetsService,\n    private routeParams: RouteParams,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    if (this.routeParams.get('id') !== null) {\n      let id = +this.routeParams.get('id');\n      this.widgetsService.getWidget(id)\n        .then(widget => this.widget = widget);\n    }\n  }\n\n  save() {\n    this.widgetsService\n      .save(this.widget)\n      .then(widget => {\n        this.router.navigate(['Widgets']);\n      })\n      .catch(error => this.error = error); // TODO: Display error message\n  }\n\n}\n"]}