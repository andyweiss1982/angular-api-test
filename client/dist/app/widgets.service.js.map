{"version":3,"file":"widgets.service.js","sourceRoot":"","sources":["widgets.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { WidgetComponent } from './+widget/';\nimport { Headers, Http } from '@angular/http';\nimport { Widget } from './models/widget';\n\nimport 'rxjs/add/operator/toPromise';\n\n@Injectable()\nexport class WidgetsService {\n  private widgetsUrl = 'api/widgets';\n  constructor(private http: Http) { };\n\n  getWidgets(): Promise<Widget[]> {\n    return this.http.get(this.widgetsUrl)\n               .toPromise()\n               .then(response => response.json())\n               .catch(this.handleError);\n  }\n\n  getWidget(id: number) {\n    return this.getWidgets()\n      .then(widgets => widgets.filter(widget => widget.id === id)[0]);\n  }\n\n  save(widget: Widget): Promise<Widget> {\n    if (widget.id) {\n      return this.put(widget);\n    }\n    return this.post(widget);\n  }\n\n  delete(widget: Widget) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n\n    let url = `${this.widgetsUrl}/${widget.id}`;\n\n    return this.http\n      .delete(url, headers)\n      .toPromise()\n      .catch(this.handleError);\n  }\n\n  // Add new Widget\n  private post(widget: Widget): Promise<Widget> {\n    let headers = new Headers({\n      'Content-Type': 'application/json'\n    });\n\n    return this.http\n      .post(this.widgetsUrl, JSON.stringify(widget), { headers: headers })\n      .toPromise()\n      .then(res => res.json())\n      .catch(this.handleError);\n  }\n\n  // Update existing Widget\n  private put(widget: Widget) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n\n    let url = `${this.widgetsUrl}/${widget.id}`;\n\n    return this.http\n      .put(url, JSON.stringify(widget), { headers: headers })\n      .toPromise()\n      .then(() => widget)\n      .catch(this.handleError);\n  }\n\n\n  private handleError(error: any) {\n    console.error('An error occurred', error);\n    return Promise.reject(error.message || error);\n  }\n\n}"]}